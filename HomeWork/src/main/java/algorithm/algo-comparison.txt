Сравнение алгоритмов Bubble Sort и Insertion sort.

Bubble sort - итерация за итерацией переставляет наибольшее число в конец массива, при кажджой итерации сравнивая
два элемента: текущий - array[i] и следующий элемент - array[i + 1]. Использовать я думаю можно когда нужно отсортировать
массив чисел в порядке возростания (от меньшего к большему), например: отсортирвоать количество ошибок у студентов ,
тот кто меньше сделал ошибок тот будет в первом индексе элемента.


Insertion sort - использует отсортирвоанный массив и массив в котором сравниваются два числа, если оно больше следующего
как в примере с Bubble sort, то этот число массива запускается в отсортированном массиве, но в обратном порядке, то есть:
мы берем элемент массива array[j] и сравниваем его в отсортированном массиве с предыдущим значением: array[j - 1].
Если array[j] < array[j - 1], то мы меняем их местами, и да до тех пор пока элемент с первого цикла, который мы закинули
во второй цикл, не займет свое место в отсортирвоанном массиве. пПримень можно когда есть отсортирвоанный массив ,
например через бабл сорт, но пришли новые студенты допустим , и их количество ошибок нужно актуализировать в отсортированном массиве.

В моем случае, я сравнивал количество итераций с помощью переменной counter, и выяснил что сортировка вставками,
делает меньше итераций чем сортировка бульбашками, разница примерно в сто итераций у меня получилась.


